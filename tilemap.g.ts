// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level0":
            case "level2":return tiles.createTilemap(hex`17000d`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . . . . . . . . 2 
2 . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 2 
2 . . . . . . . . . . . . . . . . . . . . . 2 
2 . 2 2 2 . 2 2 2 . . 2 2 . 2 2 2 . 2 2 2 . 2 
2 . 2 . . . . 2 . . 2 . 2 . 2 . 2 . . 2 . . 2 
2 . 2 2 2 . . 2 . . 2 . 2 . 2 . 2 . . 2 . . 2 
2 . . . 2 . . 2 . . 2 2 2 . 2 2 . . . 2 . . 2 
2 . 2 2 2 . . 2 . . 2 . 2 . 2 . 2 . . 2 . . 2 
2 . . . . . . . . . . . . . . . . . . . . . 2 
2 . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 2 
2 . . . . . . . . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile3,myTiles.tile2], TileScale.Sixteen);
            case "level4":
            case "level1":return tiles.createTilemap(hex`1700170002020202020202020202020202020202020202020202020200000000000000000000000000000000000000000002020001010101010000000101010100000001010101000202000000000000000000000000000000000000000000020200000000010101010101010101010101010000000002020000000000000000000000000000000000000000000202000101010101000000010101010000000101010100020200000000000000000000000000000000000000000002020000000000000000000000000000000000000000000202000101010101010101010101010101010101010100020200010000010000010000010000010000010000010002020001000001000001000001000001000001000001000202000100000100000100000100000100000100000100020200010101010101010101010101010101010101010002020000000000000000000000000000000000000000000202000000000000000000000000000000000000000000020200010101010100000001010101000000010101010002020000000000000000000000000000000000000000000202000000000101010101010101010101010100000000020200000000000000000000000000000000000000000002020001010101010000000101010100000001010101000202000000000000000300000000000000000000000000020202020202020202020202020202020202020202020202`, img`
22222222222222222222222
2.....................2
2.22222...2222...2222.2
2.....................2
2....2222222222222....2
2.....................2
2.22222...2222...2222.2
2.....................2
2.....................2
2.2222222222222222222.2
2.2..2..2..2..2..2..2.2
2.2..2..2..2..2..2..2.2
2.2..2..2..2..2..2..2.2
2.2222222222222222222.2
2.....................2
2.....................2
2.22222...2222...2222.2
2.....................2
2....2222222222222....2
2.....................2
2.22222...2222...2222.2
2.....................2
22222222222222222222222
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile3,myTiles.tile2], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "Stena0":
            case "tile1":return tile1;
            case "Stena":
            case "tile3":return tile3;
            case "myTile0":
            case "tile2":return tile2;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
